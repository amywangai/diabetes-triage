name: Release Pipeline

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Train model
      env:
        MODEL_VERSION: ${{ github.ref_name }}
      run: |
        python src/train.py

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Run container smoke tests
      run: |
        # Pull the image
        docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}

        # Run container
        docker run -d -p 8000:8000 --name test-container \
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}

        # Wait for container to be healthy
        sleep 10

        # Test health endpoint
        curl -f http://localhost:8000/health || exit 1

        # Test prediction endpoint
        curl -f -X POST http://localhost:8000/predict \
          -H "Content-Type: application/json" \
          -d '{"age":0.02,"sex":-0.044,"bmi":0.06,"bp":-0.03,"s1":-0.02,"s2":0.03,"s3":-0.02,"s4":0.02,"s5":0.02,"s6":-0.001}' \
          || exit 1

        # Cleanup
        docker stop test-container
        docker rm test-container

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          models/metrics.json
          CHANGELOG.md
        body: |
          ## Release ${{ github.ref_name }}

          ### Docker Image
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}

          ### Metrics
          See attached `metrics.json` for model performance.

          ### Changes
          See `CHANGELOG.md` for detailed changes.
        draft: false
        prerelease: false
